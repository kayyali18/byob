{"version":3,"sources":["utilities/fetches.js","components/Intro/index.js","components/Instructions/index.js","components/ExampleModal/index.js","components/Pane/index.js","utilities/endpoints.js","components/PaneContainer/index.js","components/App/App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","getCities","getSpecificCity","postCity","patchCityWebsite","deleteCity","getClubs","getSpecificClub","getComedyClubsByCity","postClub","patchClubRating","deleteClub","exampleUrl","body","exampleResponse","exampleURL","Intro","react_default","a","createElement","className","Component","Instructions","ExampleModal","_this$props","this","props","data","showStatus","closeModal","concat","onClick","src","alt","Pane","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","target","innerText","modalDeployed","setState","deployed","state","modalStatus","openModal","console","log","_this$props$data","type","url","params","successStatus","returns","failureStatus","failureMessage","example","components_ExampleModal","require","cityEndpoints","comedyClubEndpoints","PaneContainer","handleModal","modal","closeModals","_this2","key","cityEndpointsContainer","map","endpoint","components_Pane","clubsEndpointsContainer","App","modalsOpen","modalsClosed","components_Intro","components_Instructions","components_PaneContainer","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6721af0.chunk.js","sourcesContent":["export const getCities = {\n  exampleUrl: \"GET: /api/v1/cities\",\n  body: \"./body-examples/n-a.png\",\n  exampleResponse: \"./response-ss/get-cities.png\"\n};\n\nexport const getSpecificCity = {\n  exampleUrl: \"GET: /api/v1/cities/2\",\n  body: \"./body-examples/n-a.png\",\n  exampleResponse: \"./response-ss/get-specific-city.png\"\n};\n\nexport const postCity = {\n  exampleUrl: \"POST: /api/v1/cities\",\n  body: \"./body-examples/post-city.png\",\n  exampleResponse: \"./response-ss/post-city.png\"\n};\n\nexport const patchCityWebsite = {\n  exampleUrl: \"PATCH: /api/v1/cities/3\",\n  body: \"./body-examples/patch-city.png\",\n  exampleResponse: \"./response-ss/patch.png\"\n};\n\nexport const deleteCity = {\n  exampleUrl: \"DELETE: /api/v1/cities/10\",\n  body: \"./body-examples/n-a.png\",\n  exampleResponse: \"./response-ss/delete.png\"\n};\n\nexport const getClubs = {\n  exampleUrl: \"GET: /api/v1/comedy_clubs\",\n  body: \"./body-examples/n-a.png\",\n  exampleResponse: \"./response-ss/get-clubs.png\"\n};\n\nexport const getSpecificClub = {\n  exampleUrl: \"GET: /api/v1/comedy_clubs/2\",\n  body: \"./body-examples/n-a.png\",\n  exampleResponse: \"./response-ss/get-specific-club.png\"\n};\n\nexport const getComedyClubsByCity = {\n  exampleUrl: \"GET: /api/v1/cities/15/comedy_clubs\",\n  body: \"./body-examples/n-a.png\",\n  exampleResponse: \"./response-ss/get-clubs-by-city.png\"\n};\n\nexport const postClub = {\n  exampleUrl: \"POST: /api/v1/cities/2/comedy_clubs\",\n  body: \"./body-examples/post-club.png\",\n  exampleResponse: \"./response-ss/post-club.png\"\n};\n\nexport const patchClubRating = {\n  exampleURL: \"PATCH: /api/v1/comedy_clubs/2\",\n  body: \"./body-examples/patch-club.png\",\n  exampleResponse: \"./response-ss/patch.png\"\n};\n\nexport const deleteClub = {\n  exampleURL: \"DELETE: /api/v1/cities/1/comedy_clubs/10\",\n  body: \"./body-examples/n-a.png\",\n  exampleResponse: \"./response-ss/delete.png\"\n};\n","import React, { Component } from \"react\";\nimport \"../../styles/Intro.css\";\n\nclass Intro extends Component {\n  render() {\n    return (\n      <header className=\"intro\">\n        <h1>Comedy Club API - Developers FAQ</h1>\n        <p className=\"intro-text\">\n          Welcome to the Comedy Club API. This page is designed to help\n          developers gain a firm understanding of the API's endpoints, how to\n          access them, what kind of data can be expected from them, and how to\n          troubleshoot potential issues.\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Intro;\n","import React, { Component } from \"react\";\nimport \"../../styles/Instructions.css\";\n\nclass Instructions extends Component {\n  render() {\n    return (\n      <section className=\"instructions\">\n        <article className=\"left-pane\">\n          <h3>Interactive API Tester</h3>\n          <p>\n            The panel below displays documentation for all endpoints,\n            parameters, and error messages available to the Comedy Club API.\n            Deploy frames for individual endpoints to see how they work.\n          </p>\n        </article>\n        <article className=\"right-pane\" />\n      </section>\n    );\n  }\n}\n\nexport default Instructions;\n","import React, { Component } from \"react\";\nimport \"../../styles/ExampleModal.css\";\n\nclass ExampleModal extends Component {\n  render() {\n    const { data, showStatus, closeModal } = this.props;\n\n    return (\n      <aside className={`example-modal ${showStatus}`}>\n        <button onClick={closeModal}>close</button>\n        <h4>Example Endpoint: {data.exampleUrl}</h4>\n        <h4>Example Body Object:</h4>\n        <img src={data.body} alt=\"body-example\" />\n        <h4>Example Response Object</h4>\n        <img src={data.exampleResponse} alt=\"example-response\" />\n        <div />\n      </aside>\n    );\n  }\n}\n\nexport default ExampleModal;\n","import React, { Component } from \"react\";\nimport ExampleModal from \"../ExampleModal\";\nimport \"../../styles/Pane.css\";\n\nclass Pane extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      deployed: false,\n      modalStatus: false\n    };\n  }\n\n  handleClick = e => {\n    if (e.target.innerText === \"show example\" || this.props.modalDeployed) {\n      return;\n    }\n    this.setState({\n      deployed: !this.state.deployed,\n      modalStatus: false\n    });\n  };\n\n  openModal = () => {\n    console.log(this.props.modalDeployed);\n    this.setState({\n      modalStatus: true\n    });\n    this.props.openModal();\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalStatus: false\n    });\n    this.props.closeModal();\n  };\n\n  render() {\n    const {\n      type,\n      url,\n      params,\n      body,\n      successStatus,\n      returns,\n      failureStatus,\n      failureMessage,\n      example\n    } = this.props.data;\n\n    return (\n      <article className=\"pane\" onClick={this.handleClick}>\n        <section className=\"main-pane\">\n          <p className=\"type main-info\">{type}</p>\n          <p className=\"url main-info\">{url}</p>\n          <p className=\"returns main-info no-mq\">{returns}</p>\n        </section>\n        <p className=\"returns main-info mq\">{returns}</p>\n\n        <section className={`secondary-pane ${this.state.deployed}`}>\n          <p className=\"query-params secondary-info\">\n            <span className=\"secondary-label\">Query parameters:</span> {params}\n          </p>\n          <p className=\"request-body secondary-info\">\n            <span className=\"secondary-label\"> Request body:</span> {body}\n          </p>\n          <p className=\"succesful-code secondary-info\">\n            <span className=\"secondary-label\">Succesful status code:</span>{\" \"}\n            {successStatus}\n          </p>\n          <p className=\"error-code secondary-info\">\n            <span className=\"secondary-label\">Error status code:</span>{\" \"}\n            {failureStatus}\n          </p>\n          <p className=\"error-message secondary-info\">\n            <span className=\"secondary-label\">Error message:</span>{\" \"}\n            {failureMessage}\n          </p>\n          <button onClick={this.openModal}>show example</button>\n        </section>\n        <ExampleModal\n          data={example}\n          closeModal={this.closeModal}\n          showStatus={this.state.modalStatus}\n        />\n      </article>\n    );\n  }\n}\n\nexport default Pane;\n","const {\n  getCities,\n  getSpecificCity,\n  postCity,\n  patchCityWebsite,\n  deleteCity,\n  getClubs,\n  getSpecificClub,\n  getComedyClubsByCity,\n  postClub,\n  patchClubRating,\n  deleteClub\n} = require(\"./fetches.js\");\n\nexport const cityEndpoints = [\n  {\n    type: \"GET\",\n    url: \"/api/v1/cities\",\n    params: \"N/A\",\n    body: \"N/A\",\n    successStatus: 200,\n    returns: \"fetches an array of city objects\",\n    failureStatus: 422,\n    failureMessage: \"<error message>\",\n    example: getCities\n  },\n  {\n    type: \"GET\",\n    url: \"/api/v1/cities/:id\",\n    params: \"city id (number)\",\n    body: \"N/A\",\n    successStatus: 200,\n    returns:\n      \"fetches an array with a specific city object matching the id parameter\",\n    failureStatus: \"N/A\",\n    failureMessage: \"N/A\",\n    example: getSpecificCity\n  },\n  {\n    type: \"POST\",\n    url: \"/api/v1/cities\",\n    params: \"N/A\",\n    body:\n      \"an object with city (string), state (string), primary_airport (string), population (number), and tourism_website (string) key/value pairs.\",\n    successStatus: 201,\n    returns:\n      \"posts a new city and returns an object with a key/value pair of 'id' and the id number\",\n    failureStatus: 422,\n    failureMessage: \"unprocessable entity\",\n    example: postCity\n  },\n  {\n    type: \"PATCH\",\n    url: \"/api/v1/cities/:id\",\n    params: \"city id (number)\",\n    body: \"an object with a tourism_website (string) key/value pair\",\n    successStatus: 204,\n    returns:\n      \"updates a city's tourism website and returns the number of rows affected by the patch (1)\",\n    failureStatus: 415,\n    failureMessage: \"<error message>\",\n    example: patchCityWebsite\n  },\n  {\n    type: \"DELETE\",\n    url: \"/api/v1/cities/:id\",\n    params: \"city id (number)\",\n    body: \"N/A\",\n    successStatus: 202,\n    returns: \"deletes a city and returns the id number of the city\",\n    failureStatus: \"N/A\",\n    failureMessage: \"N/A\",\n    example: deleteCity\n  }\n];\n\nexport const comedyClubEndpoints = [\n  {\n    type: \"GET\",\n    url: \"/api/v1/comedy_clubs\",\n    params: \"N/A\",\n    body: \"N/A\",\n    successStatus: 200,\n    returns: \"fetches an array of all comedy club objects\",\n    failureStatus: \"N/A\",\n    failureMessage: \"N/A\",\n    example: getClubs\n  },\n  {\n    type: \"GET\",\n    url: \"/api/v1/comedy_clubs/:club_id\",\n    params: \"comedy club id (number)\",\n    body: \"N/A\",\n    successStatus: 200,\n    returns: \"fetches an array with a specific comedy club object\",\n    failureStatus: 415,\n    failureMessage: \"<error message>\",\n    example: getSpecificClub\n  },\n  {\n    type: \"GET\",\n    url: \"/api/v1/cities/:city_id/comedy_clubs\",\n    params: \"city id (number)\",\n    body: \"N/A\",\n    successStatus: 201,\n    returns: \"fetches an array of comedy club objects with a specific city id\",\n    failureStatus: 422,\n    failureMessage: \"<error message>\",\n    example: getComedyClubsByCity\n  },\n  {\n    type: \"POST\",\n    url: \"/api/v1/cities/:city_id/comedy_clubs\",\n    params: \"city id (number)\",\n    body:\n      \"an object with name (string), street_address (string), zip_code (number), and rating (number) key/value pairs\",\n    successStatus: 201,\n    returns: \"posts a new comedy club and returns the entire body object\",\n    failureStatus: 422,\n    failureMessage: \"<error message>\",\n    example: postClub\n  },\n  {\n    type: \"PATCH\",\n    url: \"/api/v1/comedy_clubs/:club_id\",\n    params: \"comedy club id (number)\",\n    body: \"on object with the rating (number) key/value pair\",\n    successStatus: 204,\n    returns:\n      \"updates a comedy club's rating and returns the id of the created club\",\n    failureStatus: 415,\n    failureMessage: \"<error message>\",\n    example: patchClubRating\n  },\n  {\n    type: \"DELETE\",\n    url: \"/api/v1/cities/:city_id/comedy_clubs/:club_id\",\n    params: \"city id (number), comedy club id (number)\",\n    body: \"N/A\",\n    successStatus: 202,\n    returns:\n      \"deletes a comedy club and returns the id number of the comedy club\",\n    failureStatus: \"N/A\",\n    failureMessage: \"N/A\",\n    example: deleteClub\n  }\n];\n","import React, { Component } from \"react\";\nimport Pane from \"../Pane\";\nimport \"../../styles/PaneContainer.css\";\nimport {\n  cityEndpoints,\n  comedyClubEndpoints\n} from \"../../utilities/endpoints.js\";\n\nclass PaneContainer extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      deployed: null\n    };\n  }\n\n  handleModal = modal => {\n    this.setState({\n      deployed: modal\n    });\n  };\n\n  closeModals = () => {\n    this.setState({\n      deployed: null\n    });\n  };\n  render() {\n    let key = 0;\n\n    const cityEndpointsContainer = cityEndpoints.map(endpoint => {\n      key++;\n      return (\n        <Pane\n          openModal={this.props.openModal}\n          closeModal={this.props.closeModal}\n          modalDeployed={this.props.modalDeployed}\n          key={key}\n          data={endpoint}\n        />\n      );\n    });\n\n    const clubsEndpointsContainer = comedyClubEndpoints.map(endpoint => {\n      key++;\n\n      return (\n        <Pane\n          openModal={this.props.openModal}\n          closeModal={this.props.closeModal}\n          modalDeployed={this.props.modalDeployed}\n          key={key}\n          data={endpoint}\n        />\n      );\n    });\n    return (\n      <main className=\"pane_container\">\n        <section className=\"city-section\">{cityEndpointsContainer}</section>\n        <section className=\"clubs-section\">{clubsEndpointsContainer}</section>\n      </main>\n    );\n  }\n}\n\nexport default PaneContainer;\n","import React, { Component } from \"react\";\nimport \"../../styles/App.css\";\nimport Intro from \"../Intro\";\nimport Instructions from \"../Instructions\";\nimport PaneContainer from \"../PaneContainer\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalDeployed: false\n    };\n  }\n\n  modalsOpen = () => {\n    this.setState({\n      modalDeployed: true\n    });\n  };\n\n  modalsClosed = () => {\n    this.setState({\n      modalDeployed: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={`dark-overlay ${this.state.modalDeployed}`} />\n        <Intro />\n        <Instructions />\n        <PaneContainer\n          openModal={this.modalsOpen}\n          closeModal={this.modalsClosed}\n          modalDeployed={this.state.modalDeployed}\n        />\n        <div />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}